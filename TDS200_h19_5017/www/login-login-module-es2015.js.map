{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,s+C;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAT3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;ACzB5B,+BAA+B,gFAAgF,GAAG,iBAAiB,oBAAoB,GAAG,QAAQ,iBAAiB,GAAG,eAAe,gCAAgC,GAAG,6CAA6C,m/B;;;;;;;;;;;;;;;;;;;;ACAnO;AACT;AACQ;AACyB;AAO1E,IAAa,SAAS,GAAtB,MAAa,SAAS;IAGpB,YACU,WAAkC,EAClC,MAAc,EACd,eAAgC;QAFhC,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAL1C,SAAI,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;IAMnC,CAAC;IAEJ,QAAQ,KAAI,CAAC;IAEb,cAAc;IAER,KAAK;;YACT,IAAI;gBACF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;oBACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;oBAC5B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;iBAC7B,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAChC;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC9C,OAAO,EAAE,CAAC,CAAC,OAAO;oBAClB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;aACjB;QACH,CAAC;KAAA;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;CACF;;YAhCwB,qFAAqB;YAC1B,sDAAM;YACG,8DAAe;;AAN/B,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;;KAEjC,CAAC;2EAKuB,qFAAqB;QAC1B,sDAAM;QACG,8DAAe;GAN/B,SAAS,CAoCrB;AApCqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\n    <h4 text-center margin-top>Insert your credentials</h4>\\n  <div id=\\\"login-form\\\">\\n    <ion-card class=\\\"login-form-field\\\">\\n      <ion-card-content>\\n        <ion-input [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\"> </ion-input>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card class=\\\"login-form-field\\\">\\n      <ion-card-content>\\n        <ion-input [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\"></ion-input>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-button expand=\\\"full\\\" color=\\\"medium\\\" (click)=\\\"logIn()\\\">Login</ion-button>\\n    <ion-button expand=\\\"full\\\" color=\\\"medium\\\" (click)=\\\"registerUser()\\\">Register</ion-button>\\n    <ion-button expand=\\\"full\\\" color=\\\"medium\\\" (click)=\\\"forgotPassword()\\\">Forgot password</ion-button>\\n  </div>\\n</ion-content>  \\n<!-- <ion-content>\\n<h4 text-center margin-top>Insert your credentials</h4>\\n  <ion-item>\\n    <ion-label stacked>Username</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\"></ion-input>\\n  <ion-item>\\n    <ion-label stacked>Password</ion-label>\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\"></ion-input>\\n  </ion-item>\\n\\n  <div text-center margin-top>\\n    <button ion-button margin-right (click)=\\\"signUp()\\\">\\n      SIGN UP\\n    </button>\\n    <button ion-button color=\\\"secondary\\\" (click)=\\\"signIn()\\\">\\n      SIGN IN\\n    </button>\\n  </div>\\n</ion-content> -->\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"ion-content {\\n  --background: url(\\\"/assets/background/login.jpg\\\") 0 0/100% 100% no-repeat;\\n}\\n\\n#login-form {\\n  margin-top: 70%;\\n}\\n\\nh4 {\\n  color: white;\\n}\\n\\nion-input {\\n  --color: rgb(255, 255, 255);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9LYXJvbGlzL1REUzIwMF9oMTlfNTAxNy9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUVBQUE7QUNDSjs7QURFRTtFQUNFLGVBQUE7QUNDSjs7QURFRTtFQUNFLFlBQUE7QUNDSjs7QURFRTtFQUNFLDJCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gICAgLS1iYWNrZ3JvdW5kOiB1cmwoXCIvYXNzZXRzL2JhY2tncm91bmQvbG9naW4uanBnXCIpIDAgMC8xMDAlIDEwMCUgbm8tcmVwZWF0O1xuICB9XG4gIFxuICAjbG9naW4tZm9ybSB7XG4gICAgbWFyZ2luLXRvcDogNzAlO1xuICB9XG4gIFxuICBoNCB7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG4gIFxuICBpb24taW5wdXQge1xuICAgIC0tY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgfSIsImlvbi1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB1cmwoXCIvYXNzZXRzL2JhY2tncm91bmQvbG9naW4uanBnXCIpIDAgMC8xMDAlIDEwMCUgbm8tcmVwZWF0O1xufVxuXG4jbG9naW4tZm9ybSB7XG4gIG1hcmdpbi10b3A6IDcwJTtcbn1cblxuaDQge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbmlvbi1pbnB1dCB7XG4gIC0tY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ToastController } from \"@ionic/angular\";\nimport { AuthenticationService } from \"../service/authentication.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.page.html\",\n  styleUrls: [\"./login.page.scss\"]\n})\nexport class LoginPage implements OnInit {\n  user = { username: \"\", password: \"\" };\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {}\n\n  // Log in side\n\n  async logIn() {\n    try {\n      this.authService.userLogIn({\n        username: this.user.username,\n        password: this.user.password\n      });\n      this.router.navigate([\"home\"]);\n    } catch (e) {\n      const toast = await this.toastController.create({\n        message: e.message,\n        duration: 2500\n      });\n      toast.present();\n    }\n  }\n\n  registerUser() {\n    this.router.navigate([\"register\"]);\n  }\n\n  forgotPassword() {\n    this.router.navigate([\"forgot\"]);\n  }\n}\n"],"sourceRoot":""}