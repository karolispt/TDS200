{"version":3,"sources":["./src/app/roomview/roomview.page.html","./src/app/roomview/roomview.module.ts","./src/app/roomview/roomview.page.scss","./src/app/roomview/roomview.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,uEAAuE,YAAY,gTAAgT,aAAa,MAAM,eAAe,uFAAuF,kBAAkB,qDAAqD,aAAa,wFAAwF,WAAW,ga;;;;;;;;;;;;;;;;;;;;;;ACA1oB;AACM;AACF;AACU;AAEV;AAEE;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;ACzB/B,2BAA2B,oBAAoB,uBAAuB,GAAG,uBAAuB,iBAAiB,GAAG,cAAc,qBAAqB,GAAG,6CAA6C,mxB;;;;;;;;;;;;;;;;;;;;;ACAtJ;AACQ;AAEE;AACpB;AAEc;AAOrD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAMvB,YACU,KAAqB,EACrB,MAAc,EACd,SAA2B,EAC3B,MAAuB;QAHvB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;QAC3B,WAAM,GAAN,MAAM,CAAiB;QAE/B,4EAA4E;QAC5E,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE;YACpC,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;gBACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK;qBACxD,IAAY,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;IAEjB,YAAY,CAAC,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,SAAS;aAClB,UAAU,CAAC,OAAO,CAAC;aACnB,GAAG,CAAC,EAAE,CAAC;aACP,MAAM,EAAE,CAAC;IACd,CAAC;IAED,qFAAqF;IAC/E,YAAY,CAAC,EAAE;;YACnB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC,SAAS;iBAClB,UAAU,CAAC,OAAO,CAAC;iBACnB,GAAG,CAAC,EAAE,CAAC;iBACP,MAAM,CAAC;gBACN,MAAM,EAAE,aAAa;gBACrB,UAAU,EAAE,YAAY,CAAC,KAAK;aAC/B,CAAC,CAAC;QACP,CAAC;KAAA;CACF;;YApCkB,8DAAc;YACb,sDAAM;YACH,wEAAgB;YACnB,kEAAe;;AAPxB;IAAR,2DAAK,EAAE;;8CAAgB;AAHb,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gJAAmC;;KAEpC,CAAC;2EAQiB,8DAAc;QACb,sDAAM;QACH,wEAAgB;QACnB,kEAAe;GAVtB,YAAY,CA2CxB;AA3CwB","file":"roomview-roomview-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Room {{room?.Name}}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/rooms\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-item>\\n            <h2 text-minimize>{{ room.Name }} is {{ room.Status }}</h2>\\n          </ion-item>\\n          <ion-card-content>\\n            Description: {{room.Description}}\\n            <br />\\n            Seats available: {{room.Number}}\\n          </ion-card-content>\\n          <ion-card-subtitle>\\n            Added by: {{room.User}}\\n          </ion-card-subtitle>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <div id=\\\"buttons\\\">\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"updateRecord(room?.Id)\\\"\\n      >Book this room</ion-button\\n    >\\n    <ion-button color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"removeRecord(room?.Id)\\\"\\n      >Delete this room</ion-button\\n    >\\n  </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RoomviewPage } from './roomview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoomviewPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RoomviewPage]\n})\nexport class RoomviewPageModule {}\n","module.exports = \".pClass {\\n  color: darkblue;\\n  text-align: center;\\n}\\n\\nion-card-subtitle {\\n  color: black;\\n}\\n\\n#buttons {\\n  margin-top: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9LYXJvbGlzL1REUzIwMF9oMTlfNTAxNy9zcmMvYXBwL3Jvb212aWV3L3Jvb212aWV3LnBhZ2Uuc2NzcyIsInNyYy9hcHAvcm9vbXZpZXcvcm9vbXZpZXcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0o7O0FER0E7RUFDSSxnQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvcm9vbXZpZXcvcm9vbXZpZXcucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBDbGFzcyB7XG4gICAgY29sb3I6IGRhcmtibHVlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWNhcmQtc3VidGl0bGUge1xuICAgIGNvbG9yOiBibGFjaztcbn1cblxuXG4jYnV0dG9ucyB7XG4gICAgbWFyZ2luLXRvcDogMTAwJTtcbn0iLCIucENsYXNzIHtcbiAgY29sb3I6IGRhcmtibHVlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1jYXJkLXN1YnRpdGxlIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4jYnV0dG9ucyB7XG4gIG1hcmdpbi10b3A6IDEwMCU7XG59Il19 */\"","import { Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport Post from \"../addroom/addroominterface\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { first } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\n\n@Component({\n  selector: \"app-roomview\",\n  templateUrl: \"./roomview.page.html\",\n  styleUrls: [\"./roomview.page.scss\"]\n})\nexport class RoomviewPage {\n  rooms$: Observable<Post[]>;\n  data: any;\n  @Input() postData: Post;\n  room: Post;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private firestore: AngularFirestore,\n    private fbauth: AngularFireAuth\n  ) {\n    // subscriber siste trykket data fra RoomsPage og viser den i ett nytt vindu\n    this.route.queryParams.subscribe(() => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.room = this.router.getCurrentNavigation().extras.state\n          .room as Post;\n      }\n    });\n  }\n\n  // sletter rommet\n\n  removeRecord(id) {\n    this.router.navigate([\"rooms\"]);\n    return this.firestore\n      .collection(\"Rooms\")\n      .doc(id)\n      .delete();\n  }\n\n  // oppdaterer rommet slik at den blir Unavailable og viser hvilken User booket rommet\n  async updateRecord(id) {\n    const userLoggedIn = await this.fbauth.authState.pipe(first()).toPromise();\n    this.router.navigate([\"rooms\"]);\n    return this.firestore\n      .collection(\"Rooms\")\n      .doc(id)\n      .update({\n        Status: \"Unavailable\",\n        OccupiedBy: userLoggedIn.email\n      });\n  }\n}\n"],"sourceRoot":""}